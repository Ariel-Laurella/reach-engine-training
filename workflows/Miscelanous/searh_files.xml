<!--
 This workflow is intended to get a list of absolute path of those  files that match with a given filename case insensitive.

Input data:
 filename: filename to search.
 rootDirectory: root directory from where to search.
 recursiveSearch: if true then search in subdirectories.

Result:
 resultFilePathList:  list of string type with absolute path of files found.
-->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
          xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/latest/studio.xsd"
          id="SearchFiles"
          name="Search Files"
          executionLabelExpression="Search files"
          subjectDOClassName=""
          showInUserInterface="false"
          resultDataDef="resultFilePathList"
          deadlineExpression=""
          sdkVersion="5.21"
>

    <initialStepName>get fullPath list</initialStepName>


    <groovyStep name="get fullPath list"
                resultDataDef="resultFilePathList"
                executionLabelExpression="Getting absolute path list with filename ${fileName}"
                nextStep="end"
    >
        <script>
            <![CDATA[

/*
* This code search a "filename" in the root directory "rootDirectoryPath" and subdirectories.
* Finally return a list of absolute path that matches with desired filename case insensitive
 */

List<String> filePathList = new ArrayList<String>()

filePathList = findFile(new File(rootDirectoryPath),fileName,filePathList)
return filePathList


List<String> findFile(File file,String fileNameToSeacrh, List<String> filePathListToSearch)
{
    File[] files = file.listFiles()
    if (files != null)
    {
        for (int i = 0; i < files.length; i++)
        {
            if (files[i].isDirectory())
            {
                if (recursiveSearch)
                 {
                   filePathListToSearch = findFile(files[i], fileNameToSeacrh, filePathListToSearch)
                 }
            }
            else
            {
                //add absolute path of file if its name matches to filename case insensitive
                if (files[i].getName().toLowerCase() == fileNameToSeacrh.toLowerCase())
                    filePathListToSearch.add(files[i].getPath())
            }
        }
    }
    return filePathListToSearch
}
        ]]>
        </script>
    </groovyStep>

                    
    <!--  End and fail steps ...........................................................................................-->

    <noopStep name="end"
              executionLabelExpression="end" />


    <!--  Context Data Definitions .....................................................................................-->

    <contextDataDef name="fileName"             dataType="String" />
    <contextDataDef name="rootDirectoryPath"    dataType="String" />
    <contextDataDef name="recursiveSearch"      dataType="Boolean" />

    <contextDataDef name="resultFilePathList"   dataType="String"   multiple="true" />


</workflow>
